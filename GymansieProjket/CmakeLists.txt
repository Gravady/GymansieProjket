######################################################
############## CMake Project File ####################
######################################################

cmake_minimum_required(VERSION 3.15) 
project(GymansieProjket)

add_executable(GymansieProjket main.cpp)

find_package(Qt6 REQUIRED COMPONENTS Core Gui Widgets Network WebSockets Xml Concurrent)
target_link_libraries(your_target PRIVATE
    Qt6::Core
    Qt6::Gui
    Qt6::Widgets
    Qt6::Network
    Qt6::WebSockets
    Qt6::Xml
    Qt6::Concurrent
)

target_link_libraries(GymansieProjket PRIVATE Qt6::Core Qt6::Widgets Qt6::Gui)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

#############################################
#QThread specific package find
find_package(Qt6 REQUIRED COMPONENTS Core)
target_link_libraries(mytarget PRIVATE Qt6::Core)


#############################################


#Compiler flags
list(COMPILE_FLAGS -Wall -Wextra -Werror -g -DTESTING_MODE)

#GNU specific compiler flags
if (CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
	target_compile_options(GymansieProjket PRIVATE -Wall -Wextra -Wpedantic -Werror)
endif()

#MSVC specific compiler flags, prioritied over GNU if both are detected
if (CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
	target_compile_options(GymansieProjket PRIVATE /W4 /WX)
endif()

#Test build compiler flag
if(TEST_BUILD)

endif()